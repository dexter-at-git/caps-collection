//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace CapsCollection.Silverlight.ServiceAgents.Proxies.Beer
{
    using System.Runtime.Serialization;


    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "DtoImageFileOperation", Namespace = "http://schemas.datacontract.org/2004/07/CapsCollection.Business.DTOs")]
    public partial class DtoImageFileOperation : object, System.ComponentModel.INotifyPropertyChanged
    {

        private string ContainerField;

        private string FileNameField;

        private string FileNameTemplateField;

        private CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.FileOperation FileOperationField;

        private byte[] ImageBytesField;

        private string OldFileNameField;

        private string ParentContainerField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Container
        {
            get
            {
                return this.ContainerField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ContainerField, value) != true))
                {
                    this.ContainerField = value;
                    this.RaisePropertyChanged("Container");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName
        {
            get
            {
                return this.FileNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.FileNameField, value) != true))
                {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileNameTemplate
        {
            get
            {
                return this.FileNameTemplateField;
            }
            set
            {
                if ((object.ReferenceEquals(this.FileNameTemplateField, value) != true))
                {
                    this.FileNameTemplateField = value;
                    this.RaisePropertyChanged("FileNameTemplate");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.FileOperation FileOperation
        {
            get
            {
                return this.FileOperationField;
            }
            set
            {
                if ((this.FileOperationField.Equals(value) != true))
                {
                    this.FileOperationField = value;
                    this.RaisePropertyChanged("FileOperation");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] ImageBytes
        {
            get
            {
                return this.ImageBytesField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ImageBytesField, value) != true))
                {
                    this.ImageBytesField = value;
                    this.RaisePropertyChanged("ImageBytes");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OldFileName
        {
            get
            {
                return this.OldFileNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.OldFileNameField, value) != true))
                {
                    this.OldFileNameField = value;
                    this.RaisePropertyChanged("OldFileName");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentContainer
        {
            get
            {
                return this.ParentContainerField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ParentContainerField, value) != true))
                {
                    this.ParentContainerField = value;
                    this.RaisePropertyChanged("ParentContainer");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "FileOperation", Namespace = "http://schemas.datacontract.org/2004/07/CapsCollection.Business.DTOs")]
    public enum FileOperation : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Save = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Delete = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Update = 2,
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "DtoBrewery", Namespace = "http://schemas.datacontract.org/2004/07/CapsCollection.Business.DTOs")]
    public partial class DtoBrewery : object, System.ComponentModel.INotifyPropertyChanged
    {

        private string BreweryField;

        private int BreweryIdField;

        private int CityIdField;

        private string CommentField;

        private int ContinentIdField;

        private int CountryIdField;

        private int RegionIdField;

        private string SiteField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Brewery
        {
            get
            {
                return this.BreweryField;
            }
            set
            {
                if ((object.ReferenceEquals(this.BreweryField, value) != true))
                {
                    this.BreweryField = value;
                    this.RaisePropertyChanged("Brewery");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BreweryId
        {
            get
            {
                return this.BreweryIdField;
            }
            set
            {
                if ((this.BreweryIdField.Equals(value) != true))
                {
                    this.BreweryIdField = value;
                    this.RaisePropertyChanged("BreweryId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CityId
        {
            get
            {
                return this.CityIdField;
            }
            set
            {
                if ((this.CityIdField.Equals(value) != true))
                {
                    this.CityIdField = value;
                    this.RaisePropertyChanged("CityId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment
        {
            get
            {
                return this.CommentField;
            }
            set
            {
                if ((object.ReferenceEquals(this.CommentField, value) != true))
                {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContinentId
        {
            get
            {
                return this.ContinentIdField;
            }
            set
            {
                if ((this.ContinentIdField.Equals(value) != true))
                {
                    this.ContinentIdField = value;
                    this.RaisePropertyChanged("ContinentId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountryId
        {
            get
            {
                return this.CountryIdField;
            }
            set
            {
                if ((this.CountryIdField.Equals(value) != true))
                {
                    this.CountryIdField = value;
                    this.RaisePropertyChanged("CountryId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RegionId
        {
            get
            {
                return this.RegionIdField;
            }
            set
            {
                if ((this.RegionIdField.Equals(value) != true))
                {
                    this.RegionIdField = value;
                    this.RaisePropertyChanged("RegionId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Site
        {
            get
            {
                return this.SiteField;
            }
            set
            {
                if ((object.ReferenceEquals(this.SiteField, value) != true))
                {
                    this.SiteField = value;
                    this.RaisePropertyChanged("Site");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "DtoBeerCountry", Namespace = "http://schemas.datacontract.org/2004/07/CapsCollection.Business.DTOs")]
    public partial class DtoBeerCountry : object, System.ComponentModel.INotifyPropertyChanged
    {

        private string Alpha3Field;

        private int BeerCountField;

        private CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoContinent ContinentField;

        private int ContinentIdField;

        private int CountryIdField;

        private string EnglishCountryFullNameField;

        private string EnglishCountryNameField;

        private string NationalCountryFullNameField;

        private string NationalCountryNameField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Alpha3
        {
            get
            {
                return this.Alpha3Field;
            }
            set
            {
                if ((object.ReferenceEquals(this.Alpha3Field, value) != true))
                {
                    this.Alpha3Field = value;
                    this.RaisePropertyChanged("Alpha3");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BeerCount
        {
            get
            {
                return this.BeerCountField;
            }
            set
            {
                if ((this.BeerCountField.Equals(value) != true))
                {
                    this.BeerCountField = value;
                    this.RaisePropertyChanged("BeerCount");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoContinent Continent
        {
            get
            {
                return this.ContinentField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ContinentField, value) != true))
                {
                    this.ContinentField = value;
                    this.RaisePropertyChanged("Continent");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContinentId
        {
            get
            {
                return this.ContinentIdField;
            }
            set
            {
                if ((this.ContinentIdField.Equals(value) != true))
                {
                    this.ContinentIdField = value;
                    this.RaisePropertyChanged("ContinentId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountryId
        {
            get
            {
                return this.CountryIdField;
            }
            set
            {
                if ((this.CountryIdField.Equals(value) != true))
                {
                    this.CountryIdField = value;
                    this.RaisePropertyChanged("CountryId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnglishCountryFullName
        {
            get
            {
                return this.EnglishCountryFullNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.EnglishCountryFullNameField, value) != true))
                {
                    this.EnglishCountryFullNameField = value;
                    this.RaisePropertyChanged("EnglishCountryFullName");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnglishCountryName
        {
            get
            {
                return this.EnglishCountryNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.EnglishCountryNameField, value) != true))
                {
                    this.EnglishCountryNameField = value;
                    this.RaisePropertyChanged("EnglishCountryName");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NationalCountryFullName
        {
            get
            {
                return this.NationalCountryFullNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.NationalCountryFullNameField, value) != true))
                {
                    this.NationalCountryFullNameField = value;
                    this.RaisePropertyChanged("NationalCountryFullName");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NationalCountryName
        {
            get
            {
                return this.NationalCountryNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.NationalCountryNameField, value) != true))
                {
                    this.NationalCountryNameField = value;
                    this.RaisePropertyChanged("NationalCountryName");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "DtoContinent", Namespace = "http://schemas.datacontract.org/2004/07/CapsCollection.Business.DTOs")]
    public partial class DtoContinent : object, System.ComponentModel.INotifyPropertyChanged
    {

        private string ContinentCodeField;

        private int ContinentIdField;

        private string ContinentNameField;

        private string EnglishContinentNameField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContinentCode
        {
            get
            {
                return this.ContinentCodeField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ContinentCodeField, value) != true))
                {
                    this.ContinentCodeField = value;
                    this.RaisePropertyChanged("ContinentCode");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContinentId
        {
            get
            {
                return this.ContinentIdField;
            }
            set
            {
                if ((this.ContinentIdField.Equals(value) != true))
                {
                    this.ContinentIdField = value;
                    this.RaisePropertyChanged("ContinentId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContinentName
        {
            get
            {
                return this.ContinentNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ContinentNameField, value) != true))
                {
                    this.ContinentNameField = value;
                    this.RaisePropertyChanged("ContinentName");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnglishContinentName
        {
            get
            {
                return this.EnglishContinentNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.EnglishContinentNameField, value) != true))
                {
                    this.EnglishContinentNameField = value;
                    this.RaisePropertyChanged("EnglishContinentName");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "DtoBeer", Namespace = "http://schemas.datacontract.org/2004/07/CapsCollection.Business.DTOs")]
    public partial class DtoBeer : object, System.ComponentModel.INotifyPropertyChanged
    {

        private string BeerCommentField;

        private int BeerIdField;

        private string BeerNameField;

        private System.Nullable<decimal> BeerPriceField;

        private string BeerSiteField;

        private int BeerStyleIdField;

        private string BeerTypeField;

        private System.Nullable<System.DateTime> BeerYearField;

        private int BreweryIdField;

        private int CapTypeIdField;

        private int ContinentIdField;

        private string CountryAlpha3Field;

        private int CountryIdField;

        private System.DateTime DateAddedField;

        private string EnglishBeerNameField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BeerComment
        {
            get
            {
                return this.BeerCommentField;
            }
            set
            {
                if ((object.ReferenceEquals(this.BeerCommentField, value) != true))
                {
                    this.BeerCommentField = value;
                    this.RaisePropertyChanged("BeerComment");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BeerId
        {
            get
            {
                return this.BeerIdField;
            }
            set
            {
                if ((this.BeerIdField.Equals(value) != true))
                {
                    this.BeerIdField = value;
                    this.RaisePropertyChanged("BeerId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BeerName
        {
            get
            {
                return this.BeerNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.BeerNameField, value) != true))
                {
                    this.BeerNameField = value;
                    this.RaisePropertyChanged("BeerName");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> BeerPrice
        {
            get
            {
                return this.BeerPriceField;
            }
            set
            {
                if ((this.BeerPriceField.Equals(value) != true))
                {
                    this.BeerPriceField = value;
                    this.RaisePropertyChanged("BeerPrice");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BeerSite
        {
            get
            {
                return this.BeerSiteField;
            }
            set
            {
                if ((object.ReferenceEquals(this.BeerSiteField, value) != true))
                {
                    this.BeerSiteField = value;
                    this.RaisePropertyChanged("BeerSite");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BeerStyleId
        {
            get
            {
                return this.BeerStyleIdField;
            }
            set
            {
                if ((this.BeerStyleIdField.Equals(value) != true))
                {
                    this.BeerStyleIdField = value;
                    this.RaisePropertyChanged("BeerStyleId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BeerType
        {
            get
            {
                return this.BeerTypeField;
            }
            set
            {
                if ((object.ReferenceEquals(this.BeerTypeField, value) != true))
                {
                    this.BeerTypeField = value;
                    this.RaisePropertyChanged("BeerType");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> BeerYear
        {
            get
            {
                return this.BeerYearField;
            }
            set
            {
                if ((this.BeerYearField.Equals(value) != true))
                {
                    this.BeerYearField = value;
                    this.RaisePropertyChanged("BeerYear");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BreweryId
        {
            get
            {
                return this.BreweryIdField;
            }
            set
            {
                if ((this.BreweryIdField.Equals(value) != true))
                {
                    this.BreweryIdField = value;
                    this.RaisePropertyChanged("BreweryId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CapTypeId
        {
            get
            {
                return this.CapTypeIdField;
            }
            set
            {
                if ((this.CapTypeIdField.Equals(value) != true))
                {
                    this.CapTypeIdField = value;
                    this.RaisePropertyChanged("CapTypeId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContinentId
        {
            get
            {
                return this.ContinentIdField;
            }
            set
            {
                if ((this.ContinentIdField.Equals(value) != true))
                {
                    this.ContinentIdField = value;
                    this.RaisePropertyChanged("ContinentId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryAlpha3
        {
            get
            {
                return this.CountryAlpha3Field;
            }
            set
            {
                if ((object.ReferenceEquals(this.CountryAlpha3Field, value) != true))
                {
                    this.CountryAlpha3Field = value;
                    this.RaisePropertyChanged("CountryAlpha3");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountryId
        {
            get
            {
                return this.CountryIdField;
            }
            set
            {
                if ((this.CountryIdField.Equals(value) != true))
                {
                    this.CountryIdField = value;
                    this.RaisePropertyChanged("CountryId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateAdded
        {
            get
            {
                return this.DateAddedField;
            }
            set
            {
                if ((this.DateAddedField.Equals(value) != true))
                {
                    this.DateAddedField = value;
                    this.RaisePropertyChanged("DateAdded");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnglishBeerName
        {
            get
            {
                return this.EnglishBeerNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.EnglishBeerNameField, value) != true))
                {
                    this.EnglishBeerNameField = value;
                    this.RaisePropertyChanged("EnglishBeerName");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "DtoCountry", Namespace = "http://schemas.datacontract.org/2004/07/CapsCollection.Business.DTOs")]
    public partial class DtoCountry : object, System.ComponentModel.INotifyPropertyChanged
    {

        private string Alpha2Field;

        private string Alpha3Field;

        private CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoContinent ContinentField;

        private int ContinentIdField;

        private int CountryIdField;

        private string EnglishCountryFullNameField;

        private string EnglishCountryNameField;

        private string ISOField;

        private string NationalCountryFullNameField;

        private string NationalCountryNameField;

        private string PreciseLocationField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Alpha2
        {
            get
            {
                return this.Alpha2Field;
            }
            set
            {
                if ((object.ReferenceEquals(this.Alpha2Field, value) != true))
                {
                    this.Alpha2Field = value;
                    this.RaisePropertyChanged("Alpha2");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Alpha3
        {
            get
            {
                return this.Alpha3Field;
            }
            set
            {
                if ((object.ReferenceEquals(this.Alpha3Field, value) != true))
                {
                    this.Alpha3Field = value;
                    this.RaisePropertyChanged("Alpha3");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoContinent Continent
        {
            get
            {
                return this.ContinentField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ContinentField, value) != true))
                {
                    this.ContinentField = value;
                    this.RaisePropertyChanged("Continent");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContinentId
        {
            get
            {
                return this.ContinentIdField;
            }
            set
            {
                if ((this.ContinentIdField.Equals(value) != true))
                {
                    this.ContinentIdField = value;
                    this.RaisePropertyChanged("ContinentId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountryId
        {
            get
            {
                return this.CountryIdField;
            }
            set
            {
                if ((this.CountryIdField.Equals(value) != true))
                {
                    this.CountryIdField = value;
                    this.RaisePropertyChanged("CountryId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnglishCountryFullName
        {
            get
            {
                return this.EnglishCountryFullNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.EnglishCountryFullNameField, value) != true))
                {
                    this.EnglishCountryFullNameField = value;
                    this.RaisePropertyChanged("EnglishCountryFullName");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnglishCountryName
        {
            get
            {
                return this.EnglishCountryNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.EnglishCountryNameField, value) != true))
                {
                    this.EnglishCountryNameField = value;
                    this.RaisePropertyChanged("EnglishCountryName");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISO
        {
            get
            {
                return this.ISOField;
            }
            set
            {
                if ((object.ReferenceEquals(this.ISOField, value) != true))
                {
                    this.ISOField = value;
                    this.RaisePropertyChanged("ISO");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NationalCountryFullName
        {
            get
            {
                return this.NationalCountryFullNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.NationalCountryFullNameField, value) != true))
                {
                    this.NationalCountryFullNameField = value;
                    this.RaisePropertyChanged("NationalCountryFullName");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NationalCountryName
        {
            get
            {
                return this.NationalCountryNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.NationalCountryNameField, value) != true))
                {
                    this.NationalCountryNameField = value;
                    this.RaisePropertyChanged("NationalCountryName");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PreciseLocation
        {
            get
            {
                return this.PreciseLocationField;
            }
            set
            {
                if ((object.ReferenceEquals(this.PreciseLocationField, value) != true))
                {
                    this.PreciseLocationField = value;
                    this.RaisePropertyChanged("PreciseLocation");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "DtoRegion", Namespace = "http://schemas.datacontract.org/2004/07/CapsCollection.Business.DTOs")]
    public partial class DtoRegion : object, System.ComponentModel.INotifyPropertyChanged
    {

        private int CountryIdField;

        private string EnglishRegionNameField;

        private string NationalRegionNameField;

        private int RegionIdField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountryId
        {
            get
            {
                return this.CountryIdField;
            }
            set
            {
                if ((this.CountryIdField.Equals(value) != true))
                {
                    this.CountryIdField = value;
                    this.RaisePropertyChanged("CountryId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnglishRegionName
        {
            get
            {
                return this.EnglishRegionNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.EnglishRegionNameField, value) != true))
                {
                    this.EnglishRegionNameField = value;
                    this.RaisePropertyChanged("EnglishRegionName");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NationalRegionName
        {
            get
            {
                return this.NationalRegionNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.NationalRegionNameField, value) != true))
                {
                    this.NationalRegionNameField = value;
                    this.RaisePropertyChanged("NationalRegionName");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RegionId
        {
            get
            {
                return this.RegionIdField;
            }
            set
            {
                if ((this.RegionIdField.Equals(value) != true))
                {
                    this.RegionIdField = value;
                    this.RaisePropertyChanged("RegionId");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "DtoCity", Namespace = "http://schemas.datacontract.org/2004/07/CapsCollection.Business.DTOs")]
    public partial class DtoCity : object, System.ComponentModel.INotifyPropertyChanged
    {

        private int CityIdField;

        private string EnglishCityNameField;

        private string NationalCityNameField;

        private int RegionIdField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CityId
        {
            get
            {
                return this.CityIdField;
            }
            set
            {
                if ((this.CityIdField.Equals(value) != true))
                {
                    this.CityIdField = value;
                    this.RaisePropertyChanged("CityId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnglishCityName
        {
            get
            {
                return this.EnglishCityNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.EnglishCityNameField, value) != true))
                {
                    this.EnglishCityNameField = value;
                    this.RaisePropertyChanged("EnglishCityName");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NationalCityName
        {
            get
            {
                return this.NationalCityNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.NationalCityNameField, value) != true))
                {
                    this.NationalCityNameField = value;
                    this.RaisePropertyChanged("NationalCityName");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RegionId
        {
            get
            {
                return this.RegionIdField;
            }
            set
            {
                if ((this.RegionIdField.Equals(value) != true))
                {
                    this.RegionIdField = value;
                    this.RaisePropertyChanged("RegionId");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "DtoBeerStyle", Namespace = "http://schemas.datacontract.org/2004/07/CapsCollection.Business.DTOs")]
    public partial class DtoBeerStyle : object, System.ComponentModel.INotifyPropertyChanged
    {

        private int BeerStyleIdField;

        private string BeerStyleNameField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BeerStyleId
        {
            get
            {
                return this.BeerStyleIdField;
            }
            set
            {
                if ((this.BeerStyleIdField.Equals(value) != true))
                {
                    this.BeerStyleIdField = value;
                    this.RaisePropertyChanged("BeerStyleId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BeerStyleName
        {
            get
            {
                return this.BeerStyleNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.BeerStyleNameField, value) != true))
                {
                    this.BeerStyleNameField = value;
                    this.RaisePropertyChanged("BeerStyleName");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "DtoCapType", Namespace = "http://schemas.datacontract.org/2004/07/CapsCollection.Business.DTOs")]
    public partial class DtoCapType : object, System.ComponentModel.INotifyPropertyChanged
    {

        private int CapTypeIdField;

        private string CapTypeNameField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CapTypeId
        {
            get
            {
                return this.CapTypeIdField;
            }
            set
            {
                if ((this.CapTypeIdField.Equals(value) != true))
                {
                    this.CapTypeIdField = value;
                    this.RaisePropertyChanged("CapTypeId");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CapTypeName
        {
            get
            {
                return this.CapTypeNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.CapTypeNameField, value) != true))
                {
                    this.CapTypeNameField = value;
                    this.RaisePropertyChanged("CapTypeName");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName = "Proxies.Beer.IBeerService")]
    public interface IBeerService
    {

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IBeerService/ProcessImageFiles", ReplyAction = "http://tempuri.org/IBeerService/ProcessImageFilesResponse")]
        System.IAsyncResult BeginProcessImageFiles(System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoImageFileOperation> imageFiles, System.AsyncCallback callback, object asyncState);

        void EndProcessImageFiles(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IBeerService/DeleteAllFilesFromContainer", ReplyAction = "http://tempuri.org/IBeerService/DeleteAllFilesFromContainerResponse")]
        System.IAsyncResult BeginDeleteAllFilesFromContainer(string imageContainer, System.AsyncCallback callback, object asyncState);

        void EndDeleteAllFilesFromContainer(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IBeerService/DownloadImageFile", ReplyAction = "http://tempuri.org/IBeerService/DownloadImageFileResponse")]
        System.IAsyncResult BeginDownloadImageFile(string container, string fileName, System.AsyncCallback callback, object asyncState);

        byte[] EndDownloadImageFile(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IBeerService/GetBreweriesByCity", ReplyAction = "http://tempuri.org/IBeerService/GetBreweriesByCityResponse")]
        System.IAsyncResult BeginGetBreweriesByCity(int cityId, System.AsyncCallback callback, object asyncState);

        System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery> EndGetBreweriesByCity(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IBeerService/GetBreweriesByFilter", ReplyAction = "http://tempuri.org/IBeerService/GetBreweriesByFilterResponse")]
        System.IAsyncResult BeginGetBreweriesByFilter(int continentId, int countryId, int regionId, int cityId, System.AsyncCallback callback, object asyncState);

        System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery> EndGetBreweriesByFilter(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IBeerService/GetBreweries", ReplyAction = "http://tempuri.org/IBeerService/GetBreweriesResponse")]
        System.IAsyncResult BeginGetBreweries(System.AsyncCallback callback, object asyncState);

        System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery> EndGetBreweries(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IBeerService/GetBrewery", ReplyAction = "http://tempuri.org/IBeerService/GetBreweryResponse")]
        System.IAsyncResult BeginGetBrewery(int breweryId, System.AsyncCallback callback, object asyncState);

        CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery EndGetBrewery(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IBeerService/UpdateBrewery", ReplyAction = "http://tempuri.org/IBeerService/UpdateBreweryResponse")]
        System.IAsyncResult BeginUpdateBrewery(CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery brewery, System.AsyncCallback callback, object asyncState);

        void EndUpdateBrewery(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IBeerService/DeleteBrewery", ReplyAction = "http://tempuri.org/IBeerService/DeleteBreweryResponse")]
        System.IAsyncResult BeginDeleteBrewery(CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery brewery, System.AsyncCallback callback, object asyncState);

        void EndDeleteBrewery(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IBeerService/GetBeerCountries", ReplyAction = "http://tempuri.org/IBeerService/GetBeerCountriesResponse")]
        System.IAsyncResult BeginGetBeerCountries(System.AsyncCallback callback, object asyncState);

        System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeerCountry> EndGetBeerCountries(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IBeerService/GetAllBeers", ReplyAction = "http://tempuri.org/IBeerService/GetAllBeersResponse")]
        System.IAsyncResult BeginGetAllBeers(System.AsyncCallback callback, object asyncState);

        System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeer> EndGetAllBeers(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IBeerService/GetCountryBeers", ReplyAction = "http://tempuri.org/IBeerService/GetCountryBeersResponse")]
        System.IAsyncResult BeginGetCountryBeers(int countryId, System.AsyncCallback callback, object asyncState);

        System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeer> EndGetCountryBeers(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IBeerService/GetBeerByName", ReplyAction = "http://tempuri.org/IBeerService/GetBeerByNameResponse")]
        System.IAsyncResult BeginGetBeerByName(string beerName, System.AsyncCallback callback, object asyncState);

        System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeer> EndGetBeerByName(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IBeerService/GetBeer", ReplyAction = "http://tempuri.org/IBeerService/GetBeerResponse")]
        System.IAsyncResult BeginGetBeer(int beerId, System.AsyncCallback callback, object asyncState);

        CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeer EndGetBeer(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IBeerService/UpdateBeer", ReplyAction = "http://tempuri.org/IBeerService/UpdateBeerResponse")]
        System.IAsyncResult BeginUpdateBeer(CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeer beer, System.AsyncCallback callback, object asyncState);

        int EndUpdateBeer(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IBeerService/DeleteBeer", ReplyAction = "http://tempuri.org/IBeerService/DeleteBeerResponse")]
        System.IAsyncResult BeginDeleteBeer(CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeer beer, System.AsyncCallback callback, object asyncState);

        void EndDeleteBeer(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IBeerService/GetContinents", ReplyAction = "http://tempuri.org/IBeerService/GetContinentsResponse")]
        System.IAsyncResult BeginGetContinents(System.AsyncCallback callback, object asyncState);

        System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoContinent> EndGetContinents(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IBeerService/GetAllCountries", ReplyAction = "http://tempuri.org/IBeerService/GetAllCountriesResponse")]
        System.IAsyncResult BeginGetAllCountries(System.AsyncCallback callback, object asyncState);

        System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCountry> EndGetAllCountries(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IBeerService/GetCountriesByContinent", ReplyAction = "http://tempuri.org/IBeerService/GetCountriesByContinentResponse")]
        System.IAsyncResult BeginGetCountriesByContinent(int continentId, bool includeFlags, System.AsyncCallback callback, object asyncState);

        System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCountry> EndGetCountriesByContinent(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IBeerService/GetRegionsByCountry", ReplyAction = "http://tempuri.org/IBeerService/GetRegionsByCountryResponse")]
        System.IAsyncResult BeginGetRegionsByCountry(int countryId, System.AsyncCallback callback, object asyncState);

        System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoRegion> EndGetRegionsByCountry(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IBeerService/GetCitiesByRegion", ReplyAction = "http://tempuri.org/IBeerService/GetCitiesByRegionResponse")]
        System.IAsyncResult BeginGetCitiesByRegion(int regionId, System.AsyncCallback callback, object asyncState);

        System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCity> EndGetCitiesByRegion(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IBeerService/GetBreweriesByCountry", ReplyAction = "http://tempuri.org/IBeerService/GetBreweriesByCountryResponse")]
        System.IAsyncResult BeginGetBreweriesByCountry(int countryId, System.AsyncCallback callback, object asyncState);

        System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery> EndGetBreweriesByCountry(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IBeerService/GetBeerStyles", ReplyAction = "http://tempuri.org/IBeerService/GetBeerStylesResponse")]
        System.IAsyncResult BeginGetBeerStyles(System.AsyncCallback callback, object asyncState);

        System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeerStyle> EndGetBeerStyles(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IBeerService/GetBeerStyle", ReplyAction = "http://tempuri.org/IBeerService/GetBeerStyleResponse")]
        System.IAsyncResult BeginGetBeerStyle(int beerStyleId, System.AsyncCallback callback, object asyncState);

        CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeerStyle EndGetBeerStyle(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IBeerService/UpdateBeerStyle", ReplyAction = "http://tempuri.org/IBeerService/UpdateBeerStyleResponse")]
        System.IAsyncResult BeginUpdateBeerStyle(CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeerStyle beerStyle, System.AsyncCallback callback, object asyncState);

        void EndUpdateBeerStyle(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IBeerService/DeleteBeerStyle", ReplyAction = "http://tempuri.org/IBeerService/DeleteBeerStyleResponse")]
        System.IAsyncResult BeginDeleteBeerStyle(CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeerStyle beerStyle, System.AsyncCallback callback, object asyncState);

        void EndDeleteBeerStyle(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IBeerService/GetContinentsWithBreweries", ReplyAction = "http://tempuri.org/IBeerService/GetContinentsWithBreweriesResponse")]
        System.IAsyncResult BeginGetContinentsWithBreweries(System.AsyncCallback callback, object asyncState);

        System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoContinent> EndGetContinentsWithBreweries(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IBeerService/GetContinentCountriesWithBreweries", ReplyAction = "http://tempuri.org/IBeerService/GetContinentCountriesWithBreweriesResponse")]
        System.IAsyncResult BeginGetContinentCountriesWithBreweries(int continentId, System.AsyncCallback callback, object asyncState);

        System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCountry> EndGetContinentCountriesWithBreweries(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IBeerService/GetCountriesWithBreweries", ReplyAction = "http://tempuri.org/IBeerService/GetCountriesWithBreweriesResponse")]
        System.IAsyncResult BeginGetCountriesWithBreweries(System.AsyncCallback callback, object asyncState);

        System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCountry> EndGetCountriesWithBreweries(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IBeerService/GetCapTypes", ReplyAction = "http://tempuri.org/IBeerService/GetCapTypesResponse")]
        System.IAsyncResult BeginGetCapTypes(System.AsyncCallback callback, object asyncState);

        System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCapType> EndGetCapTypes(System.IAsyncResult result);
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBeerServiceChannel : CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DownloadImageFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public DownloadImageFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public byte[] Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBreweriesByCityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public GetBreweriesByCityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery> Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery>)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBreweriesByFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public GetBreweriesByFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery> Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery>)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBreweriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public GetBreweriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery> Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery>)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBreweryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public GetBreweryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBeerCountriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public GetBeerCountriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeerCountry> Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeerCountry>)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllBeersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public GetAllBeersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeer> Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeer>)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCountryBeersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public GetCountryBeersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeer> Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeer>)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBeerByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public GetBeerByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeer> Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeer>)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBeerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public GetBeerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeer Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeer)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateBeerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public UpdateBeerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public int Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetContinentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public GetContinentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoContinent> Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoContinent>)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllCountriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public GetAllCountriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCountry> Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCountry>)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCountriesByContinentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public GetCountriesByContinentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCountry> Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCountry>)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRegionsByCountryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public GetRegionsByCountryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoRegion> Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoRegion>)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCitiesByRegionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public GetCitiesByRegionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCity> Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCity>)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBreweriesByCountryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public GetBreweriesByCountryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery> Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery>)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBeerStylesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public GetBeerStylesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeerStyle> Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeerStyle>)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBeerStyleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public GetBeerStyleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeerStyle Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeerStyle)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetContinentsWithBreweriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public GetContinentsWithBreweriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoContinent> Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoContinent>)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetContinentCountriesWithBreweriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public GetContinentCountriesWithBreweriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCountry> Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCountry>)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCountriesWithBreweriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public GetCountriesWithBreweriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCountry> Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCountry>)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCapTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        public GetCapTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCapType> Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCapType>)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BeerServiceClient : System.ServiceModel.ClientBase<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService>, CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService
    {

        private BeginOperationDelegate onBeginProcessImageFilesDelegate;

        private EndOperationDelegate onEndProcessImageFilesDelegate;

        private System.Threading.SendOrPostCallback onProcessImageFilesCompletedDelegate;

        private BeginOperationDelegate onBeginDeleteAllFilesFromContainerDelegate;

        private EndOperationDelegate onEndDeleteAllFilesFromContainerDelegate;

        private System.Threading.SendOrPostCallback onDeleteAllFilesFromContainerCompletedDelegate;

        private BeginOperationDelegate onBeginDownloadImageFileDelegate;

        private EndOperationDelegate onEndDownloadImageFileDelegate;

        private System.Threading.SendOrPostCallback onDownloadImageFileCompletedDelegate;

        private BeginOperationDelegate onBeginGetBreweriesByCityDelegate;

        private EndOperationDelegate onEndGetBreweriesByCityDelegate;

        private System.Threading.SendOrPostCallback onGetBreweriesByCityCompletedDelegate;

        private BeginOperationDelegate onBeginGetBreweriesByFilterDelegate;

        private EndOperationDelegate onEndGetBreweriesByFilterDelegate;

        private System.Threading.SendOrPostCallback onGetBreweriesByFilterCompletedDelegate;

        private BeginOperationDelegate onBeginGetBreweriesDelegate;

        private EndOperationDelegate onEndGetBreweriesDelegate;

        private System.Threading.SendOrPostCallback onGetBreweriesCompletedDelegate;

        private BeginOperationDelegate onBeginGetBreweryDelegate;

        private EndOperationDelegate onEndGetBreweryDelegate;

        private System.Threading.SendOrPostCallback onGetBreweryCompletedDelegate;

        private BeginOperationDelegate onBeginUpdateBreweryDelegate;

        private EndOperationDelegate onEndUpdateBreweryDelegate;

        private System.Threading.SendOrPostCallback onUpdateBreweryCompletedDelegate;

        private BeginOperationDelegate onBeginDeleteBreweryDelegate;

        private EndOperationDelegate onEndDeleteBreweryDelegate;

        private System.Threading.SendOrPostCallback onDeleteBreweryCompletedDelegate;

        private BeginOperationDelegate onBeginGetBeerCountriesDelegate;

        private EndOperationDelegate onEndGetBeerCountriesDelegate;

        private System.Threading.SendOrPostCallback onGetBeerCountriesCompletedDelegate;

        private BeginOperationDelegate onBeginGetAllBeersDelegate;

        private EndOperationDelegate onEndGetAllBeersDelegate;

        private System.Threading.SendOrPostCallback onGetAllBeersCompletedDelegate;

        private BeginOperationDelegate onBeginGetCountryBeersDelegate;

        private EndOperationDelegate onEndGetCountryBeersDelegate;

        private System.Threading.SendOrPostCallback onGetCountryBeersCompletedDelegate;

        private BeginOperationDelegate onBeginGetBeerByNameDelegate;

        private EndOperationDelegate onEndGetBeerByNameDelegate;

        private System.Threading.SendOrPostCallback onGetBeerByNameCompletedDelegate;

        private BeginOperationDelegate onBeginGetBeerDelegate;

        private EndOperationDelegate onEndGetBeerDelegate;

        private System.Threading.SendOrPostCallback onGetBeerCompletedDelegate;

        private BeginOperationDelegate onBeginUpdateBeerDelegate;

        private EndOperationDelegate onEndUpdateBeerDelegate;

        private System.Threading.SendOrPostCallback onUpdateBeerCompletedDelegate;

        private BeginOperationDelegate onBeginDeleteBeerDelegate;

        private EndOperationDelegate onEndDeleteBeerDelegate;

        private System.Threading.SendOrPostCallback onDeleteBeerCompletedDelegate;

        private BeginOperationDelegate onBeginGetContinentsDelegate;

        private EndOperationDelegate onEndGetContinentsDelegate;

        private System.Threading.SendOrPostCallback onGetContinentsCompletedDelegate;

        private BeginOperationDelegate onBeginGetAllCountriesDelegate;

        private EndOperationDelegate onEndGetAllCountriesDelegate;

        private System.Threading.SendOrPostCallback onGetAllCountriesCompletedDelegate;

        private BeginOperationDelegate onBeginGetCountriesByContinentDelegate;

        private EndOperationDelegate onEndGetCountriesByContinentDelegate;

        private System.Threading.SendOrPostCallback onGetCountriesByContinentCompletedDelegate;

        private BeginOperationDelegate onBeginGetRegionsByCountryDelegate;

        private EndOperationDelegate onEndGetRegionsByCountryDelegate;

        private System.Threading.SendOrPostCallback onGetRegionsByCountryCompletedDelegate;

        private BeginOperationDelegate onBeginGetCitiesByRegionDelegate;

        private EndOperationDelegate onEndGetCitiesByRegionDelegate;

        private System.Threading.SendOrPostCallback onGetCitiesByRegionCompletedDelegate;

        private BeginOperationDelegate onBeginGetBreweriesByCountryDelegate;

        private EndOperationDelegate onEndGetBreweriesByCountryDelegate;

        private System.Threading.SendOrPostCallback onGetBreweriesByCountryCompletedDelegate;

        private BeginOperationDelegate onBeginGetBeerStylesDelegate;

        private EndOperationDelegate onEndGetBeerStylesDelegate;

        private System.Threading.SendOrPostCallback onGetBeerStylesCompletedDelegate;

        private BeginOperationDelegate onBeginGetBeerStyleDelegate;

        private EndOperationDelegate onEndGetBeerStyleDelegate;

        private System.Threading.SendOrPostCallback onGetBeerStyleCompletedDelegate;

        private BeginOperationDelegate onBeginUpdateBeerStyleDelegate;

        private EndOperationDelegate onEndUpdateBeerStyleDelegate;

        private System.Threading.SendOrPostCallback onUpdateBeerStyleCompletedDelegate;

        private BeginOperationDelegate onBeginDeleteBeerStyleDelegate;

        private EndOperationDelegate onEndDeleteBeerStyleDelegate;

        private System.Threading.SendOrPostCallback onDeleteBeerStyleCompletedDelegate;

        private BeginOperationDelegate onBeginGetContinentsWithBreweriesDelegate;

        private EndOperationDelegate onEndGetContinentsWithBreweriesDelegate;

        private System.Threading.SendOrPostCallback onGetContinentsWithBreweriesCompletedDelegate;

        private BeginOperationDelegate onBeginGetContinentCountriesWithBreweriesDelegate;

        private EndOperationDelegate onEndGetContinentCountriesWithBreweriesDelegate;

        private System.Threading.SendOrPostCallback onGetContinentCountriesWithBreweriesCompletedDelegate;

        private BeginOperationDelegate onBeginGetCountriesWithBreweriesDelegate;

        private EndOperationDelegate onEndGetCountriesWithBreweriesDelegate;

        private System.Threading.SendOrPostCallback onGetCountriesWithBreweriesCompletedDelegate;

        private BeginOperationDelegate onBeginGetCapTypesDelegate;

        private EndOperationDelegate onEndGetCapTypesDelegate;

        private System.Threading.SendOrPostCallback onGetCapTypesCompletedDelegate;

        private BeginOperationDelegate onBeginOpenDelegate;

        private EndOperationDelegate onEndOpenDelegate;

        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;

        private BeginOperationDelegate onBeginCloseDelegate;

        private EndOperationDelegate onEndCloseDelegate;

        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;

        public BeerServiceClient()
        {
        }

        public BeerServiceClient(string endpointConfigurationName) :
            base(endpointConfigurationName)
        {
        }

        public BeerServiceClient(string endpointConfigurationName, string remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public BeerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public BeerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
            base(binding, remoteAddress)
        {
        }

        public System.Net.CookieContainer CookieContainer
        {
            get
            {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null))
                {
                    return httpCookieContainerManager.CookieContainer;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null))
                {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else
                {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }

        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ProcessImageFilesCompleted;

        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteAllFilesFromContainerCompleted;

        public event System.EventHandler<DownloadImageFileCompletedEventArgs> DownloadImageFileCompleted;

        public event System.EventHandler<GetBreweriesByCityCompletedEventArgs> GetBreweriesByCityCompleted;

        public event System.EventHandler<GetBreweriesByFilterCompletedEventArgs> GetBreweriesByFilterCompleted;

        public event System.EventHandler<GetBreweriesCompletedEventArgs> GetBreweriesCompleted;

        public event System.EventHandler<GetBreweryCompletedEventArgs> GetBreweryCompleted;

        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateBreweryCompleted;

        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteBreweryCompleted;

        public event System.EventHandler<GetBeerCountriesCompletedEventArgs> GetBeerCountriesCompleted;

        public event System.EventHandler<GetAllBeersCompletedEventArgs> GetAllBeersCompleted;

        public event System.EventHandler<GetCountryBeersCompletedEventArgs> GetCountryBeersCompleted;

        public event System.EventHandler<GetBeerByNameCompletedEventArgs> GetBeerByNameCompleted;

        public event System.EventHandler<GetBeerCompletedEventArgs> GetBeerCompleted;

        public event System.EventHandler<UpdateBeerCompletedEventArgs> UpdateBeerCompleted;

        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteBeerCompleted;

        public event System.EventHandler<GetContinentsCompletedEventArgs> GetContinentsCompleted;

        public event System.EventHandler<GetAllCountriesCompletedEventArgs> GetAllCountriesCompleted;

        public event System.EventHandler<GetCountriesByContinentCompletedEventArgs> GetCountriesByContinentCompleted;

        public event System.EventHandler<GetRegionsByCountryCompletedEventArgs> GetRegionsByCountryCompleted;

        public event System.EventHandler<GetCitiesByRegionCompletedEventArgs> GetCitiesByRegionCompleted;

        public event System.EventHandler<GetBreweriesByCountryCompletedEventArgs> GetBreweriesByCountryCompleted;

        public event System.EventHandler<GetBeerStylesCompletedEventArgs> GetBeerStylesCompleted;

        public event System.EventHandler<GetBeerStyleCompletedEventArgs> GetBeerStyleCompleted;

        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateBeerStyleCompleted;

        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteBeerStyleCompleted;

        public event System.EventHandler<GetContinentsWithBreweriesCompletedEventArgs> GetContinentsWithBreweriesCompleted;

        public event System.EventHandler<GetContinentCountriesWithBreweriesCompletedEventArgs> GetContinentCountriesWithBreweriesCompleted;

        public event System.EventHandler<GetCountriesWithBreweriesCompletedEventArgs> GetCountriesWithBreweriesCompleted;

        public event System.EventHandler<GetCapTypesCompletedEventArgs> GetCapTypesCompleted;

        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;

        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.BeginProcessImageFiles(System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoImageFileOperation> imageFiles, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginProcessImageFiles(imageFiles, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.EndProcessImageFiles(System.IAsyncResult result)
        {
            base.Channel.EndProcessImageFiles(result);
        }

        private System.IAsyncResult OnBeginProcessImageFiles(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoImageFileOperation> imageFiles = ((System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoImageFileOperation>)(inValues[0]));
            return ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).BeginProcessImageFiles(imageFiles, callback, asyncState);
        }

        private object[] OnEndProcessImageFiles(System.IAsyncResult result)
        {
            ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).EndProcessImageFiles(result);
            return null;
        }

        private void OnProcessImageFilesCompleted(object state)
        {
            if ((this.ProcessImageFilesCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ProcessImageFilesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }

        public void ProcessImageFilesAsync(System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoImageFileOperation> imageFiles)
        {
            this.ProcessImageFilesAsync(imageFiles, null);
        }

        public void ProcessImageFilesAsync(System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoImageFileOperation> imageFiles, object userState)
        {
            if ((this.onBeginProcessImageFilesDelegate == null))
            {
                this.onBeginProcessImageFilesDelegate = new BeginOperationDelegate(this.OnBeginProcessImageFiles);
            }
            if ((this.onEndProcessImageFilesDelegate == null))
            {
                this.onEndProcessImageFilesDelegate = new EndOperationDelegate(this.OnEndProcessImageFiles);
            }
            if ((this.onProcessImageFilesCompletedDelegate == null))
            {
                this.onProcessImageFilesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnProcessImageFilesCompleted);
            }
            base.InvokeAsync(this.onBeginProcessImageFilesDelegate, new object[] {
                        imageFiles}, this.onEndProcessImageFilesDelegate, this.onProcessImageFilesCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.BeginDeleteAllFilesFromContainer(string imageContainer, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginDeleteAllFilesFromContainer(imageContainer, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.EndDeleteAllFilesFromContainer(System.IAsyncResult result)
        {
            base.Channel.EndDeleteAllFilesFromContainer(result);
        }

        private System.IAsyncResult OnBeginDeleteAllFilesFromContainer(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            string imageContainer = ((string)(inValues[0]));
            return ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).BeginDeleteAllFilesFromContainer(imageContainer, callback, asyncState);
        }

        private object[] OnEndDeleteAllFilesFromContainer(System.IAsyncResult result)
        {
            ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).EndDeleteAllFilesFromContainer(result);
            return null;
        }

        private void OnDeleteAllFilesFromContainerCompleted(object state)
        {
            if ((this.DeleteAllFilesFromContainerCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteAllFilesFromContainerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }

        public void DeleteAllFilesFromContainerAsync(string imageContainer)
        {
            this.DeleteAllFilesFromContainerAsync(imageContainer, null);
        }

        public void DeleteAllFilesFromContainerAsync(string imageContainer, object userState)
        {
            if ((this.onBeginDeleteAllFilesFromContainerDelegate == null))
            {
                this.onBeginDeleteAllFilesFromContainerDelegate = new BeginOperationDelegate(this.OnBeginDeleteAllFilesFromContainer);
            }
            if ((this.onEndDeleteAllFilesFromContainerDelegate == null))
            {
                this.onEndDeleteAllFilesFromContainerDelegate = new EndOperationDelegate(this.OnEndDeleteAllFilesFromContainer);
            }
            if ((this.onDeleteAllFilesFromContainerCompletedDelegate == null))
            {
                this.onDeleteAllFilesFromContainerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteAllFilesFromContainerCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteAllFilesFromContainerDelegate, new object[] {
                        imageContainer}, this.onEndDeleteAllFilesFromContainerDelegate, this.onDeleteAllFilesFromContainerCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.BeginDownloadImageFile(string container, string fileName, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginDownloadImageFile(container, fileName, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.EndDownloadImageFile(System.IAsyncResult result)
        {
            return base.Channel.EndDownloadImageFile(result);
        }

        private System.IAsyncResult OnBeginDownloadImageFile(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            string container = ((string)(inValues[0]));
            string fileName = ((string)(inValues[1]));
            return ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).BeginDownloadImageFile(container, fileName, callback, asyncState);
        }

        private object[] OnEndDownloadImageFile(System.IAsyncResult result)
        {
            byte[] retVal = ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).EndDownloadImageFile(result);
            return new object[] {
                    retVal};
        }

        private void OnDownloadImageFileCompleted(object state)
        {
            if ((this.DownloadImageFileCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DownloadImageFileCompleted(this, new DownloadImageFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void DownloadImageFileAsync(string container, string fileName)
        {
            this.DownloadImageFileAsync(container, fileName, null);
        }

        public void DownloadImageFileAsync(string container, string fileName, object userState)
        {
            if ((this.onBeginDownloadImageFileDelegate == null))
            {
                this.onBeginDownloadImageFileDelegate = new BeginOperationDelegate(this.OnBeginDownloadImageFile);
            }
            if ((this.onEndDownloadImageFileDelegate == null))
            {
                this.onEndDownloadImageFileDelegate = new EndOperationDelegate(this.OnEndDownloadImageFile);
            }
            if ((this.onDownloadImageFileCompletedDelegate == null))
            {
                this.onDownloadImageFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDownloadImageFileCompleted);
            }
            base.InvokeAsync(this.onBeginDownloadImageFileDelegate, new object[] {
                        container,
                        fileName}, this.onEndDownloadImageFileDelegate, this.onDownloadImageFileCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.BeginGetBreweriesByCity(int cityId, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetBreweriesByCity(cityId, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery> CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.EndGetBreweriesByCity(System.IAsyncResult result)
        {
            return base.Channel.EndGetBreweriesByCity(result);
        }

        private System.IAsyncResult OnBeginGetBreweriesByCity(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            int cityId = ((int)(inValues[0]));
            return ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).BeginGetBreweriesByCity(cityId, callback, asyncState);
        }

        private object[] OnEndGetBreweriesByCity(System.IAsyncResult result)
        {
            System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery> retVal = ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).EndGetBreweriesByCity(result);
            return new object[] {
                    retVal};
        }

        private void OnGetBreweriesByCityCompleted(object state)
        {
            if ((this.GetBreweriesByCityCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBreweriesByCityCompleted(this, new GetBreweriesByCityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetBreweriesByCityAsync(int cityId)
        {
            this.GetBreweriesByCityAsync(cityId, null);
        }

        public void GetBreweriesByCityAsync(int cityId, object userState)
        {
            if ((this.onBeginGetBreweriesByCityDelegate == null))
            {
                this.onBeginGetBreweriesByCityDelegate = new BeginOperationDelegate(this.OnBeginGetBreweriesByCity);
            }
            if ((this.onEndGetBreweriesByCityDelegate == null))
            {
                this.onEndGetBreweriesByCityDelegate = new EndOperationDelegate(this.OnEndGetBreweriesByCity);
            }
            if ((this.onGetBreweriesByCityCompletedDelegate == null))
            {
                this.onGetBreweriesByCityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBreweriesByCityCompleted);
            }
            base.InvokeAsync(this.onBeginGetBreweriesByCityDelegate, new object[] {
                        cityId}, this.onEndGetBreweriesByCityDelegate, this.onGetBreweriesByCityCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.BeginGetBreweriesByFilter(int continentId, int countryId, int regionId, int cityId, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetBreweriesByFilter(continentId, countryId, regionId, cityId, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery> CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.EndGetBreweriesByFilter(System.IAsyncResult result)
        {
            return base.Channel.EndGetBreweriesByFilter(result);
        }

        private System.IAsyncResult OnBeginGetBreweriesByFilter(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            int continentId = ((int)(inValues[0]));
            int countryId = ((int)(inValues[1]));
            int regionId = ((int)(inValues[2]));
            int cityId = ((int)(inValues[3]));
            return ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).BeginGetBreweriesByFilter(continentId, countryId, regionId, cityId, callback, asyncState);
        }

        private object[] OnEndGetBreweriesByFilter(System.IAsyncResult result)
        {
            System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery> retVal = ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).EndGetBreweriesByFilter(result);
            return new object[] {
                    retVal};
        }

        private void OnGetBreweriesByFilterCompleted(object state)
        {
            if ((this.GetBreweriesByFilterCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBreweriesByFilterCompleted(this, new GetBreweriesByFilterCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetBreweriesByFilterAsync(int continentId, int countryId, int regionId, int cityId)
        {
            this.GetBreweriesByFilterAsync(continentId, countryId, regionId, cityId, null);
        }

        public void GetBreweriesByFilterAsync(int continentId, int countryId, int regionId, int cityId, object userState)
        {
            if ((this.onBeginGetBreweriesByFilterDelegate == null))
            {
                this.onBeginGetBreweriesByFilterDelegate = new BeginOperationDelegate(this.OnBeginGetBreweriesByFilter);
            }
            if ((this.onEndGetBreweriesByFilterDelegate == null))
            {
                this.onEndGetBreweriesByFilterDelegate = new EndOperationDelegate(this.OnEndGetBreweriesByFilter);
            }
            if ((this.onGetBreweriesByFilterCompletedDelegate == null))
            {
                this.onGetBreweriesByFilterCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBreweriesByFilterCompleted);
            }
            base.InvokeAsync(this.onBeginGetBreweriesByFilterDelegate, new object[] {
                        continentId,
                        countryId,
                        regionId,
                        cityId}, this.onEndGetBreweriesByFilterDelegate, this.onGetBreweriesByFilterCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.BeginGetBreweries(System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetBreweries(callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery> CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.EndGetBreweries(System.IAsyncResult result)
        {
            return base.Channel.EndGetBreweries(result);
        }

        private System.IAsyncResult OnBeginGetBreweries(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            return ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).BeginGetBreweries(callback, asyncState);
        }

        private object[] OnEndGetBreweries(System.IAsyncResult result)
        {
            System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery> retVal = ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).EndGetBreweries(result);
            return new object[] {
                    retVal};
        }

        private void OnGetBreweriesCompleted(object state)
        {
            if ((this.GetBreweriesCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBreweriesCompleted(this, new GetBreweriesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetBreweriesAsync()
        {
            this.GetBreweriesAsync(null);
        }

        public void GetBreweriesAsync(object userState)
        {
            if ((this.onBeginGetBreweriesDelegate == null))
            {
                this.onBeginGetBreweriesDelegate = new BeginOperationDelegate(this.OnBeginGetBreweries);
            }
            if ((this.onEndGetBreweriesDelegate == null))
            {
                this.onEndGetBreweriesDelegate = new EndOperationDelegate(this.OnEndGetBreweries);
            }
            if ((this.onGetBreweriesCompletedDelegate == null))
            {
                this.onGetBreweriesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBreweriesCompleted);
            }
            base.InvokeAsync(this.onBeginGetBreweriesDelegate, null, this.onEndGetBreweriesDelegate, this.onGetBreweriesCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.BeginGetBrewery(int breweryId, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetBrewery(breweryId, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.EndGetBrewery(System.IAsyncResult result)
        {
            return base.Channel.EndGetBrewery(result);
        }

        private System.IAsyncResult OnBeginGetBrewery(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            int breweryId = ((int)(inValues[0]));
            return ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).BeginGetBrewery(breweryId, callback, asyncState);
        }

        private object[] OnEndGetBrewery(System.IAsyncResult result)
        {
            CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery retVal = ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).EndGetBrewery(result);
            return new object[] {
                    retVal};
        }

        private void OnGetBreweryCompleted(object state)
        {
            if ((this.GetBreweryCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBreweryCompleted(this, new GetBreweryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetBreweryAsync(int breweryId)
        {
            this.GetBreweryAsync(breweryId, null);
        }

        public void GetBreweryAsync(int breweryId, object userState)
        {
            if ((this.onBeginGetBreweryDelegate == null))
            {
                this.onBeginGetBreweryDelegate = new BeginOperationDelegate(this.OnBeginGetBrewery);
            }
            if ((this.onEndGetBreweryDelegate == null))
            {
                this.onEndGetBreweryDelegate = new EndOperationDelegate(this.OnEndGetBrewery);
            }
            if ((this.onGetBreweryCompletedDelegate == null))
            {
                this.onGetBreweryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBreweryCompleted);
            }
            base.InvokeAsync(this.onBeginGetBreweryDelegate, new object[] {
                        breweryId}, this.onEndGetBreweryDelegate, this.onGetBreweryCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.BeginUpdateBrewery(CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery brewery, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginUpdateBrewery(brewery, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.EndUpdateBrewery(System.IAsyncResult result)
        {
            base.Channel.EndUpdateBrewery(result);
        }

        private System.IAsyncResult OnBeginUpdateBrewery(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery brewery = ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery)(inValues[0]));
            return ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).BeginUpdateBrewery(brewery, callback, asyncState);
        }

        private object[] OnEndUpdateBrewery(System.IAsyncResult result)
        {
            ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).EndUpdateBrewery(result);
            return null;
        }

        private void OnUpdateBreweryCompleted(object state)
        {
            if ((this.UpdateBreweryCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateBreweryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }

        public void UpdateBreweryAsync(CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery brewery)
        {
            this.UpdateBreweryAsync(brewery, null);
        }

        public void UpdateBreweryAsync(CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery brewery, object userState)
        {
            if ((this.onBeginUpdateBreweryDelegate == null))
            {
                this.onBeginUpdateBreweryDelegate = new BeginOperationDelegate(this.OnBeginUpdateBrewery);
            }
            if ((this.onEndUpdateBreweryDelegate == null))
            {
                this.onEndUpdateBreweryDelegate = new EndOperationDelegate(this.OnEndUpdateBrewery);
            }
            if ((this.onUpdateBreweryCompletedDelegate == null))
            {
                this.onUpdateBreweryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateBreweryCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateBreweryDelegate, new object[] {
                        brewery}, this.onEndUpdateBreweryDelegate, this.onUpdateBreweryCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.BeginDeleteBrewery(CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery brewery, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginDeleteBrewery(brewery, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.EndDeleteBrewery(System.IAsyncResult result)
        {
            base.Channel.EndDeleteBrewery(result);
        }

        private System.IAsyncResult OnBeginDeleteBrewery(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery brewery = ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery)(inValues[0]));
            return ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).BeginDeleteBrewery(brewery, callback, asyncState);
        }

        private object[] OnEndDeleteBrewery(System.IAsyncResult result)
        {
            ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).EndDeleteBrewery(result);
            return null;
        }

        private void OnDeleteBreweryCompleted(object state)
        {
            if ((this.DeleteBreweryCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteBreweryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }

        public void DeleteBreweryAsync(CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery brewery)
        {
            this.DeleteBreweryAsync(brewery, null);
        }

        public void DeleteBreweryAsync(CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery brewery, object userState)
        {
            if ((this.onBeginDeleteBreweryDelegate == null))
            {
                this.onBeginDeleteBreweryDelegate = new BeginOperationDelegate(this.OnBeginDeleteBrewery);
            }
            if ((this.onEndDeleteBreweryDelegate == null))
            {
                this.onEndDeleteBreweryDelegate = new EndOperationDelegate(this.OnEndDeleteBrewery);
            }
            if ((this.onDeleteBreweryCompletedDelegate == null))
            {
                this.onDeleteBreweryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteBreweryCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteBreweryDelegate, new object[] {
                        brewery}, this.onEndDeleteBreweryDelegate, this.onDeleteBreweryCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.BeginGetBeerCountries(System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetBeerCountries(callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeerCountry> CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.EndGetBeerCountries(System.IAsyncResult result)
        {
            return base.Channel.EndGetBeerCountries(result);
        }

        private System.IAsyncResult OnBeginGetBeerCountries(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            return ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).BeginGetBeerCountries(callback, asyncState);
        }

        private object[] OnEndGetBeerCountries(System.IAsyncResult result)
        {
            System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeerCountry> retVal = ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).EndGetBeerCountries(result);
            return new object[] {
                    retVal};
        }

        private void OnGetBeerCountriesCompleted(object state)
        {
            if ((this.GetBeerCountriesCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBeerCountriesCompleted(this, new GetBeerCountriesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetBeerCountriesAsync()
        {
            this.GetBeerCountriesAsync(null);
        }

        public void GetBeerCountriesAsync(object userState)
        {
            if ((this.onBeginGetBeerCountriesDelegate == null))
            {
                this.onBeginGetBeerCountriesDelegate = new BeginOperationDelegate(this.OnBeginGetBeerCountries);
            }
            if ((this.onEndGetBeerCountriesDelegate == null))
            {
                this.onEndGetBeerCountriesDelegate = new EndOperationDelegate(this.OnEndGetBeerCountries);
            }
            if ((this.onGetBeerCountriesCompletedDelegate == null))
            {
                this.onGetBeerCountriesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBeerCountriesCompleted);
            }
            base.InvokeAsync(this.onBeginGetBeerCountriesDelegate, null, this.onEndGetBeerCountriesDelegate, this.onGetBeerCountriesCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.BeginGetAllBeers(System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetAllBeers(callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeer> CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.EndGetAllBeers(System.IAsyncResult result)
        {
            return base.Channel.EndGetAllBeers(result);
        }

        private System.IAsyncResult OnBeginGetAllBeers(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            return ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).BeginGetAllBeers(callback, asyncState);
        }

        private object[] OnEndGetAllBeers(System.IAsyncResult result)
        {
            System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeer> retVal = ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).EndGetAllBeers(result);
            return new object[] {
                    retVal};
        }

        private void OnGetAllBeersCompleted(object state)
        {
            if ((this.GetAllBeersCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllBeersCompleted(this, new GetAllBeersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetAllBeersAsync()
        {
            this.GetAllBeersAsync(null);
        }

        public void GetAllBeersAsync(object userState)
        {
            if ((this.onBeginGetAllBeersDelegate == null))
            {
                this.onBeginGetAllBeersDelegate = new BeginOperationDelegate(this.OnBeginGetAllBeers);
            }
            if ((this.onEndGetAllBeersDelegate == null))
            {
                this.onEndGetAllBeersDelegate = new EndOperationDelegate(this.OnEndGetAllBeers);
            }
            if ((this.onGetAllBeersCompletedDelegate == null))
            {
                this.onGetAllBeersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllBeersCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllBeersDelegate, null, this.onEndGetAllBeersDelegate, this.onGetAllBeersCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.BeginGetCountryBeers(int countryId, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetCountryBeers(countryId, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeer> CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.EndGetCountryBeers(System.IAsyncResult result)
        {
            return base.Channel.EndGetCountryBeers(result);
        }

        private System.IAsyncResult OnBeginGetCountryBeers(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            int countryId = ((int)(inValues[0]));
            return ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).BeginGetCountryBeers(countryId, callback, asyncState);
        }

        private object[] OnEndGetCountryBeers(System.IAsyncResult result)
        {
            System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeer> retVal = ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).EndGetCountryBeers(result);
            return new object[] {
                    retVal};
        }

        private void OnGetCountryBeersCompleted(object state)
        {
            if ((this.GetCountryBeersCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCountryBeersCompleted(this, new GetCountryBeersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetCountryBeersAsync(int countryId)
        {
            this.GetCountryBeersAsync(countryId, null);
        }

        public void GetCountryBeersAsync(int countryId, object userState)
        {
            if ((this.onBeginGetCountryBeersDelegate == null))
            {
                this.onBeginGetCountryBeersDelegate = new BeginOperationDelegate(this.OnBeginGetCountryBeers);
            }
            if ((this.onEndGetCountryBeersDelegate == null))
            {
                this.onEndGetCountryBeersDelegate = new EndOperationDelegate(this.OnEndGetCountryBeers);
            }
            if ((this.onGetCountryBeersCompletedDelegate == null))
            {
                this.onGetCountryBeersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCountryBeersCompleted);
            }
            base.InvokeAsync(this.onBeginGetCountryBeersDelegate, new object[] {
                        countryId}, this.onEndGetCountryBeersDelegate, this.onGetCountryBeersCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.BeginGetBeerByName(string beerName, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetBeerByName(beerName, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeer> CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.EndGetBeerByName(System.IAsyncResult result)
        {
            return base.Channel.EndGetBeerByName(result);
        }

        private System.IAsyncResult OnBeginGetBeerByName(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            string beerName = ((string)(inValues[0]));
            return ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).BeginGetBeerByName(beerName, callback, asyncState);
        }

        private object[] OnEndGetBeerByName(System.IAsyncResult result)
        {
            System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeer> retVal = ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).EndGetBeerByName(result);
            return new object[] {
                    retVal};
        }

        private void OnGetBeerByNameCompleted(object state)
        {
            if ((this.GetBeerByNameCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBeerByNameCompleted(this, new GetBeerByNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetBeerByNameAsync(string beerName)
        {
            this.GetBeerByNameAsync(beerName, null);
        }

        public void GetBeerByNameAsync(string beerName, object userState)
        {
            if ((this.onBeginGetBeerByNameDelegate == null))
            {
                this.onBeginGetBeerByNameDelegate = new BeginOperationDelegate(this.OnBeginGetBeerByName);
            }
            if ((this.onEndGetBeerByNameDelegate == null))
            {
                this.onEndGetBeerByNameDelegate = new EndOperationDelegate(this.OnEndGetBeerByName);
            }
            if ((this.onGetBeerByNameCompletedDelegate == null))
            {
                this.onGetBeerByNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBeerByNameCompleted);
            }
            base.InvokeAsync(this.onBeginGetBeerByNameDelegate, new object[] {
                        beerName}, this.onEndGetBeerByNameDelegate, this.onGetBeerByNameCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.BeginGetBeer(int beerId, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetBeer(beerId, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeer CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.EndGetBeer(System.IAsyncResult result)
        {
            return base.Channel.EndGetBeer(result);
        }

        private System.IAsyncResult OnBeginGetBeer(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            int beerId = ((int)(inValues[0]));
            return ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).BeginGetBeer(beerId, callback, asyncState);
        }

        private object[] OnEndGetBeer(System.IAsyncResult result)
        {
            CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeer retVal = ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).EndGetBeer(result);
            return new object[] {
                    retVal};
        }

        private void OnGetBeerCompleted(object state)
        {
            if ((this.GetBeerCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBeerCompleted(this, new GetBeerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetBeerAsync(int beerId)
        {
            this.GetBeerAsync(beerId, null);
        }

        public void GetBeerAsync(int beerId, object userState)
        {
            if ((this.onBeginGetBeerDelegate == null))
            {
                this.onBeginGetBeerDelegate = new BeginOperationDelegate(this.OnBeginGetBeer);
            }
            if ((this.onEndGetBeerDelegate == null))
            {
                this.onEndGetBeerDelegate = new EndOperationDelegate(this.OnEndGetBeer);
            }
            if ((this.onGetBeerCompletedDelegate == null))
            {
                this.onGetBeerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBeerCompleted);
            }
            base.InvokeAsync(this.onBeginGetBeerDelegate, new object[] {
                        beerId}, this.onEndGetBeerDelegate, this.onGetBeerCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.BeginUpdateBeer(CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeer beer, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginUpdateBeer(beer, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.EndUpdateBeer(System.IAsyncResult result)
        {
            return base.Channel.EndUpdateBeer(result);
        }

        private System.IAsyncResult OnBeginUpdateBeer(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeer beer = ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeer)(inValues[0]));
            return ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).BeginUpdateBeer(beer, callback, asyncState);
        }

        private object[] OnEndUpdateBeer(System.IAsyncResult result)
        {
            int retVal = ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).EndUpdateBeer(result);
            return new object[] {
                    retVal};
        }

        private void OnUpdateBeerCompleted(object state)
        {
            if ((this.UpdateBeerCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateBeerCompleted(this, new UpdateBeerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void UpdateBeerAsync(CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeer beer)
        {
            this.UpdateBeerAsync(beer, null);
        }

        public void UpdateBeerAsync(CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeer beer, object userState)
        {
            if ((this.onBeginUpdateBeerDelegate == null))
            {
                this.onBeginUpdateBeerDelegate = new BeginOperationDelegate(this.OnBeginUpdateBeer);
            }
            if ((this.onEndUpdateBeerDelegate == null))
            {
                this.onEndUpdateBeerDelegate = new EndOperationDelegate(this.OnEndUpdateBeer);
            }
            if ((this.onUpdateBeerCompletedDelegate == null))
            {
                this.onUpdateBeerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateBeerCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateBeerDelegate, new object[] {
                        beer}, this.onEndUpdateBeerDelegate, this.onUpdateBeerCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.BeginDeleteBeer(CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeer beer, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginDeleteBeer(beer, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.EndDeleteBeer(System.IAsyncResult result)
        {
            base.Channel.EndDeleteBeer(result);
        }

        private System.IAsyncResult OnBeginDeleteBeer(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeer beer = ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeer)(inValues[0]));
            return ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).BeginDeleteBeer(beer, callback, asyncState);
        }

        private object[] OnEndDeleteBeer(System.IAsyncResult result)
        {
            ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).EndDeleteBeer(result);
            return null;
        }

        private void OnDeleteBeerCompleted(object state)
        {
            if ((this.DeleteBeerCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteBeerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }

        public void DeleteBeerAsync(CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeer beer)
        {
            this.DeleteBeerAsync(beer, null);
        }

        public void DeleteBeerAsync(CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeer beer, object userState)
        {
            if ((this.onBeginDeleteBeerDelegate == null))
            {
                this.onBeginDeleteBeerDelegate = new BeginOperationDelegate(this.OnBeginDeleteBeer);
            }
            if ((this.onEndDeleteBeerDelegate == null))
            {
                this.onEndDeleteBeerDelegate = new EndOperationDelegate(this.OnEndDeleteBeer);
            }
            if ((this.onDeleteBeerCompletedDelegate == null))
            {
                this.onDeleteBeerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteBeerCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteBeerDelegate, new object[] {
                        beer}, this.onEndDeleteBeerDelegate, this.onDeleteBeerCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.BeginGetContinents(System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetContinents(callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoContinent> CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.EndGetContinents(System.IAsyncResult result)
        {
            return base.Channel.EndGetContinents(result);
        }

        private System.IAsyncResult OnBeginGetContinents(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            return ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).BeginGetContinents(callback, asyncState);
        }

        private object[] OnEndGetContinents(System.IAsyncResult result)
        {
            System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoContinent> retVal = ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).EndGetContinents(result);
            return new object[] {
                    retVal};
        }

        private void OnGetContinentsCompleted(object state)
        {
            if ((this.GetContinentsCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetContinentsCompleted(this, new GetContinentsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetContinentsAsync()
        {
            this.GetContinentsAsync(null);
        }

        public void GetContinentsAsync(object userState)
        {
            if ((this.onBeginGetContinentsDelegate == null))
            {
                this.onBeginGetContinentsDelegate = new BeginOperationDelegate(this.OnBeginGetContinents);
            }
            if ((this.onEndGetContinentsDelegate == null))
            {
                this.onEndGetContinentsDelegate = new EndOperationDelegate(this.OnEndGetContinents);
            }
            if ((this.onGetContinentsCompletedDelegate == null))
            {
                this.onGetContinentsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetContinentsCompleted);
            }
            base.InvokeAsync(this.onBeginGetContinentsDelegate, null, this.onEndGetContinentsDelegate, this.onGetContinentsCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.BeginGetAllCountries(System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetAllCountries(callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCountry> CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.EndGetAllCountries(System.IAsyncResult result)
        {
            return base.Channel.EndGetAllCountries(result);
        }

        private System.IAsyncResult OnBeginGetAllCountries(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            return ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).BeginGetAllCountries(callback, asyncState);
        }

        private object[] OnEndGetAllCountries(System.IAsyncResult result)
        {
            System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCountry> retVal = ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).EndGetAllCountries(result);
            return new object[] {
                    retVal};
        }

        private void OnGetAllCountriesCompleted(object state)
        {
            if ((this.GetAllCountriesCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllCountriesCompleted(this, new GetAllCountriesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetAllCountriesAsync()
        {
            this.GetAllCountriesAsync(null);
        }

        public void GetAllCountriesAsync(object userState)
        {
            if ((this.onBeginGetAllCountriesDelegate == null))
            {
                this.onBeginGetAllCountriesDelegate = new BeginOperationDelegate(this.OnBeginGetAllCountries);
            }
            if ((this.onEndGetAllCountriesDelegate == null))
            {
                this.onEndGetAllCountriesDelegate = new EndOperationDelegate(this.OnEndGetAllCountries);
            }
            if ((this.onGetAllCountriesCompletedDelegate == null))
            {
                this.onGetAllCountriesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllCountriesCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllCountriesDelegate, null, this.onEndGetAllCountriesDelegate, this.onGetAllCountriesCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.BeginGetCountriesByContinent(int continentId, bool includeFlags, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetCountriesByContinent(continentId, includeFlags, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCountry> CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.EndGetCountriesByContinent(System.IAsyncResult result)
        {
            return base.Channel.EndGetCountriesByContinent(result);
        }

        private System.IAsyncResult OnBeginGetCountriesByContinent(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            int continentId = ((int)(inValues[0]));
            bool includeFlags = ((bool)(inValues[1]));
            return ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).BeginGetCountriesByContinent(continentId, includeFlags, callback, asyncState);
        }

        private object[] OnEndGetCountriesByContinent(System.IAsyncResult result)
        {
            System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCountry> retVal = ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).EndGetCountriesByContinent(result);
            return new object[] {
                    retVal};
        }

        private void OnGetCountriesByContinentCompleted(object state)
        {
            if ((this.GetCountriesByContinentCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCountriesByContinentCompleted(this, new GetCountriesByContinentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetCountriesByContinentAsync(int continentId, bool includeFlags)
        {
            this.GetCountriesByContinentAsync(continentId, includeFlags, null);
        }

        public void GetCountriesByContinentAsync(int continentId, bool includeFlags, object userState)
        {
            if ((this.onBeginGetCountriesByContinentDelegate == null))
            {
                this.onBeginGetCountriesByContinentDelegate = new BeginOperationDelegate(this.OnBeginGetCountriesByContinent);
            }
            if ((this.onEndGetCountriesByContinentDelegate == null))
            {
                this.onEndGetCountriesByContinentDelegate = new EndOperationDelegate(this.OnEndGetCountriesByContinent);
            }
            if ((this.onGetCountriesByContinentCompletedDelegate == null))
            {
                this.onGetCountriesByContinentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCountriesByContinentCompleted);
            }
            base.InvokeAsync(this.onBeginGetCountriesByContinentDelegate, new object[] {
                        continentId,
                        includeFlags}, this.onEndGetCountriesByContinentDelegate, this.onGetCountriesByContinentCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.BeginGetRegionsByCountry(int countryId, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetRegionsByCountry(countryId, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoRegion> CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.EndGetRegionsByCountry(System.IAsyncResult result)
        {
            return base.Channel.EndGetRegionsByCountry(result);
        }

        private System.IAsyncResult OnBeginGetRegionsByCountry(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            int countryId = ((int)(inValues[0]));
            return ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).BeginGetRegionsByCountry(countryId, callback, asyncState);
        }

        private object[] OnEndGetRegionsByCountry(System.IAsyncResult result)
        {
            System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoRegion> retVal = ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).EndGetRegionsByCountry(result);
            return new object[] {
                    retVal};
        }

        private void OnGetRegionsByCountryCompleted(object state)
        {
            if ((this.GetRegionsByCountryCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRegionsByCountryCompleted(this, new GetRegionsByCountryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetRegionsByCountryAsync(int countryId)
        {
            this.GetRegionsByCountryAsync(countryId, null);
        }

        public void GetRegionsByCountryAsync(int countryId, object userState)
        {
            if ((this.onBeginGetRegionsByCountryDelegate == null))
            {
                this.onBeginGetRegionsByCountryDelegate = new BeginOperationDelegate(this.OnBeginGetRegionsByCountry);
            }
            if ((this.onEndGetRegionsByCountryDelegate == null))
            {
                this.onEndGetRegionsByCountryDelegate = new EndOperationDelegate(this.OnEndGetRegionsByCountry);
            }
            if ((this.onGetRegionsByCountryCompletedDelegate == null))
            {
                this.onGetRegionsByCountryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRegionsByCountryCompleted);
            }
            base.InvokeAsync(this.onBeginGetRegionsByCountryDelegate, new object[] {
                        countryId}, this.onEndGetRegionsByCountryDelegate, this.onGetRegionsByCountryCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.BeginGetCitiesByRegion(int regionId, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetCitiesByRegion(regionId, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCity> CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.EndGetCitiesByRegion(System.IAsyncResult result)
        {
            return base.Channel.EndGetCitiesByRegion(result);
        }

        private System.IAsyncResult OnBeginGetCitiesByRegion(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            int regionId = ((int)(inValues[0]));
            return ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).BeginGetCitiesByRegion(regionId, callback, asyncState);
        }

        private object[] OnEndGetCitiesByRegion(System.IAsyncResult result)
        {
            System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCity> retVal = ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).EndGetCitiesByRegion(result);
            return new object[] {
                    retVal};
        }

        private void OnGetCitiesByRegionCompleted(object state)
        {
            if ((this.GetCitiesByRegionCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCitiesByRegionCompleted(this, new GetCitiesByRegionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetCitiesByRegionAsync(int regionId)
        {
            this.GetCitiesByRegionAsync(regionId, null);
        }

        public void GetCitiesByRegionAsync(int regionId, object userState)
        {
            if ((this.onBeginGetCitiesByRegionDelegate == null))
            {
                this.onBeginGetCitiesByRegionDelegate = new BeginOperationDelegate(this.OnBeginGetCitiesByRegion);
            }
            if ((this.onEndGetCitiesByRegionDelegate == null))
            {
                this.onEndGetCitiesByRegionDelegate = new EndOperationDelegate(this.OnEndGetCitiesByRegion);
            }
            if ((this.onGetCitiesByRegionCompletedDelegate == null))
            {
                this.onGetCitiesByRegionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCitiesByRegionCompleted);
            }
            base.InvokeAsync(this.onBeginGetCitiesByRegionDelegate, new object[] {
                        regionId}, this.onEndGetCitiesByRegionDelegate, this.onGetCitiesByRegionCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.BeginGetBreweriesByCountry(int countryId, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetBreweriesByCountry(countryId, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery> CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.EndGetBreweriesByCountry(System.IAsyncResult result)
        {
            return base.Channel.EndGetBreweriesByCountry(result);
        }

        private System.IAsyncResult OnBeginGetBreweriesByCountry(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            int countryId = ((int)(inValues[0]));
            return ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).BeginGetBreweriesByCountry(countryId, callback, asyncState);
        }

        private object[] OnEndGetBreweriesByCountry(System.IAsyncResult result)
        {
            System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery> retVal = ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).EndGetBreweriesByCountry(result);
            return new object[] {
                    retVal};
        }

        private void OnGetBreweriesByCountryCompleted(object state)
        {
            if ((this.GetBreweriesByCountryCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBreweriesByCountryCompleted(this, new GetBreweriesByCountryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetBreweriesByCountryAsync(int countryId)
        {
            this.GetBreweriesByCountryAsync(countryId, null);
        }

        public void GetBreweriesByCountryAsync(int countryId, object userState)
        {
            if ((this.onBeginGetBreweriesByCountryDelegate == null))
            {
                this.onBeginGetBreweriesByCountryDelegate = new BeginOperationDelegate(this.OnBeginGetBreweriesByCountry);
            }
            if ((this.onEndGetBreweriesByCountryDelegate == null))
            {
                this.onEndGetBreweriesByCountryDelegate = new EndOperationDelegate(this.OnEndGetBreweriesByCountry);
            }
            if ((this.onGetBreweriesByCountryCompletedDelegate == null))
            {
                this.onGetBreweriesByCountryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBreweriesByCountryCompleted);
            }
            base.InvokeAsync(this.onBeginGetBreweriesByCountryDelegate, new object[] {
                        countryId}, this.onEndGetBreweriesByCountryDelegate, this.onGetBreweriesByCountryCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.BeginGetBeerStyles(System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetBeerStyles(callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeerStyle> CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.EndGetBeerStyles(System.IAsyncResult result)
        {
            return base.Channel.EndGetBeerStyles(result);
        }

        private System.IAsyncResult OnBeginGetBeerStyles(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            return ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).BeginGetBeerStyles(callback, asyncState);
        }

        private object[] OnEndGetBeerStyles(System.IAsyncResult result)
        {
            System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeerStyle> retVal = ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).EndGetBeerStyles(result);
            return new object[] {
                    retVal};
        }

        private void OnGetBeerStylesCompleted(object state)
        {
            if ((this.GetBeerStylesCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBeerStylesCompleted(this, new GetBeerStylesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetBeerStylesAsync()
        {
            this.GetBeerStylesAsync(null);
        }

        public void GetBeerStylesAsync(object userState)
        {
            if ((this.onBeginGetBeerStylesDelegate == null))
            {
                this.onBeginGetBeerStylesDelegate = new BeginOperationDelegate(this.OnBeginGetBeerStyles);
            }
            if ((this.onEndGetBeerStylesDelegate == null))
            {
                this.onEndGetBeerStylesDelegate = new EndOperationDelegate(this.OnEndGetBeerStyles);
            }
            if ((this.onGetBeerStylesCompletedDelegate == null))
            {
                this.onGetBeerStylesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBeerStylesCompleted);
            }
            base.InvokeAsync(this.onBeginGetBeerStylesDelegate, null, this.onEndGetBeerStylesDelegate, this.onGetBeerStylesCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.BeginGetBeerStyle(int beerStyleId, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetBeerStyle(beerStyleId, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeerStyle CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.EndGetBeerStyle(System.IAsyncResult result)
        {
            return base.Channel.EndGetBeerStyle(result);
        }

        private System.IAsyncResult OnBeginGetBeerStyle(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            int beerStyleId = ((int)(inValues[0]));
            return ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).BeginGetBeerStyle(beerStyleId, callback, asyncState);
        }

        private object[] OnEndGetBeerStyle(System.IAsyncResult result)
        {
            CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeerStyle retVal = ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).EndGetBeerStyle(result);
            return new object[] {
                    retVal};
        }

        private void OnGetBeerStyleCompleted(object state)
        {
            if ((this.GetBeerStyleCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBeerStyleCompleted(this, new GetBeerStyleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetBeerStyleAsync(int beerStyleId)
        {
            this.GetBeerStyleAsync(beerStyleId, null);
        }

        public void GetBeerStyleAsync(int beerStyleId, object userState)
        {
            if ((this.onBeginGetBeerStyleDelegate == null))
            {
                this.onBeginGetBeerStyleDelegate = new BeginOperationDelegate(this.OnBeginGetBeerStyle);
            }
            if ((this.onEndGetBeerStyleDelegate == null))
            {
                this.onEndGetBeerStyleDelegate = new EndOperationDelegate(this.OnEndGetBeerStyle);
            }
            if ((this.onGetBeerStyleCompletedDelegate == null))
            {
                this.onGetBeerStyleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBeerStyleCompleted);
            }
            base.InvokeAsync(this.onBeginGetBeerStyleDelegate, new object[] {
                        beerStyleId}, this.onEndGetBeerStyleDelegate, this.onGetBeerStyleCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.BeginUpdateBeerStyle(CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeerStyle beerStyle, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginUpdateBeerStyle(beerStyle, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.EndUpdateBeerStyle(System.IAsyncResult result)
        {
            base.Channel.EndUpdateBeerStyle(result);
        }

        private System.IAsyncResult OnBeginUpdateBeerStyle(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeerStyle beerStyle = ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeerStyle)(inValues[0]));
            return ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).BeginUpdateBeerStyle(beerStyle, callback, asyncState);
        }

        private object[] OnEndUpdateBeerStyle(System.IAsyncResult result)
        {
            ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).EndUpdateBeerStyle(result);
            return null;
        }

        private void OnUpdateBeerStyleCompleted(object state)
        {
            if ((this.UpdateBeerStyleCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateBeerStyleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }

        public void UpdateBeerStyleAsync(CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeerStyle beerStyle)
        {
            this.UpdateBeerStyleAsync(beerStyle, null);
        }

        public void UpdateBeerStyleAsync(CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeerStyle beerStyle, object userState)
        {
            if ((this.onBeginUpdateBeerStyleDelegate == null))
            {
                this.onBeginUpdateBeerStyleDelegate = new BeginOperationDelegate(this.OnBeginUpdateBeerStyle);
            }
            if ((this.onEndUpdateBeerStyleDelegate == null))
            {
                this.onEndUpdateBeerStyleDelegate = new EndOperationDelegate(this.OnEndUpdateBeerStyle);
            }
            if ((this.onUpdateBeerStyleCompletedDelegate == null))
            {
                this.onUpdateBeerStyleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateBeerStyleCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateBeerStyleDelegate, new object[] {
                        beerStyle}, this.onEndUpdateBeerStyleDelegate, this.onUpdateBeerStyleCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.BeginDeleteBeerStyle(CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeerStyle beerStyle, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginDeleteBeerStyle(beerStyle, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.EndDeleteBeerStyle(System.IAsyncResult result)
        {
            base.Channel.EndDeleteBeerStyle(result);
        }

        private System.IAsyncResult OnBeginDeleteBeerStyle(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeerStyle beerStyle = ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeerStyle)(inValues[0]));
            return ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).BeginDeleteBeerStyle(beerStyle, callback, asyncState);
        }

        private object[] OnEndDeleteBeerStyle(System.IAsyncResult result)
        {
            ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).EndDeleteBeerStyle(result);
            return null;
        }

        private void OnDeleteBeerStyleCompleted(object state)
        {
            if ((this.DeleteBeerStyleCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteBeerStyleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }

        public void DeleteBeerStyleAsync(CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeerStyle beerStyle)
        {
            this.DeleteBeerStyleAsync(beerStyle, null);
        }

        public void DeleteBeerStyleAsync(CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeerStyle beerStyle, object userState)
        {
            if ((this.onBeginDeleteBeerStyleDelegate == null))
            {
                this.onBeginDeleteBeerStyleDelegate = new BeginOperationDelegate(this.OnBeginDeleteBeerStyle);
            }
            if ((this.onEndDeleteBeerStyleDelegate == null))
            {
                this.onEndDeleteBeerStyleDelegate = new EndOperationDelegate(this.OnEndDeleteBeerStyle);
            }
            if ((this.onDeleteBeerStyleCompletedDelegate == null))
            {
                this.onDeleteBeerStyleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteBeerStyleCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteBeerStyleDelegate, new object[] {
                        beerStyle}, this.onEndDeleteBeerStyleDelegate, this.onDeleteBeerStyleCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.BeginGetContinentsWithBreweries(System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetContinentsWithBreweries(callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoContinent> CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.EndGetContinentsWithBreweries(System.IAsyncResult result)
        {
            return base.Channel.EndGetContinentsWithBreweries(result);
        }

        private System.IAsyncResult OnBeginGetContinentsWithBreweries(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            return ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).BeginGetContinentsWithBreweries(callback, asyncState);
        }

        private object[] OnEndGetContinentsWithBreweries(System.IAsyncResult result)
        {
            System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoContinent> retVal = ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).EndGetContinentsWithBreweries(result);
            return new object[] {
                    retVal};
        }

        private void OnGetContinentsWithBreweriesCompleted(object state)
        {
            if ((this.GetContinentsWithBreweriesCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetContinentsWithBreweriesCompleted(this, new GetContinentsWithBreweriesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetContinentsWithBreweriesAsync()
        {
            this.GetContinentsWithBreweriesAsync(null);
        }

        public void GetContinentsWithBreweriesAsync(object userState)
        {
            if ((this.onBeginGetContinentsWithBreweriesDelegate == null))
            {
                this.onBeginGetContinentsWithBreweriesDelegate = new BeginOperationDelegate(this.OnBeginGetContinentsWithBreweries);
            }
            if ((this.onEndGetContinentsWithBreweriesDelegate == null))
            {
                this.onEndGetContinentsWithBreweriesDelegate = new EndOperationDelegate(this.OnEndGetContinentsWithBreweries);
            }
            if ((this.onGetContinentsWithBreweriesCompletedDelegate == null))
            {
                this.onGetContinentsWithBreweriesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetContinentsWithBreweriesCompleted);
            }
            base.InvokeAsync(this.onBeginGetContinentsWithBreweriesDelegate, null, this.onEndGetContinentsWithBreweriesDelegate, this.onGetContinentsWithBreweriesCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.BeginGetContinentCountriesWithBreweries(int continentId, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetContinentCountriesWithBreweries(continentId, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCountry> CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.EndGetContinentCountriesWithBreweries(System.IAsyncResult result)
        {
            return base.Channel.EndGetContinentCountriesWithBreweries(result);
        }

        private System.IAsyncResult OnBeginGetContinentCountriesWithBreweries(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            int continentId = ((int)(inValues[0]));
            return ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).BeginGetContinentCountriesWithBreweries(continentId, callback, asyncState);
        }

        private object[] OnEndGetContinentCountriesWithBreweries(System.IAsyncResult result)
        {
            System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCountry> retVal = ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).EndGetContinentCountriesWithBreweries(result);
            return new object[] {
                    retVal};
        }

        private void OnGetContinentCountriesWithBreweriesCompleted(object state)
        {
            if ((this.GetContinentCountriesWithBreweriesCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetContinentCountriesWithBreweriesCompleted(this, new GetContinentCountriesWithBreweriesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetContinentCountriesWithBreweriesAsync(int continentId)
        {
            this.GetContinentCountriesWithBreweriesAsync(continentId, null);
        }

        public void GetContinentCountriesWithBreweriesAsync(int continentId, object userState)
        {
            if ((this.onBeginGetContinentCountriesWithBreweriesDelegate == null))
            {
                this.onBeginGetContinentCountriesWithBreweriesDelegate = new BeginOperationDelegate(this.OnBeginGetContinentCountriesWithBreweries);
            }
            if ((this.onEndGetContinentCountriesWithBreweriesDelegate == null))
            {
                this.onEndGetContinentCountriesWithBreweriesDelegate = new EndOperationDelegate(this.OnEndGetContinentCountriesWithBreweries);
            }
            if ((this.onGetContinentCountriesWithBreweriesCompletedDelegate == null))
            {
                this.onGetContinentCountriesWithBreweriesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetContinentCountriesWithBreweriesCompleted);
            }
            base.InvokeAsync(this.onBeginGetContinentCountriesWithBreweriesDelegate, new object[] {
                        continentId}, this.onEndGetContinentCountriesWithBreweriesDelegate, this.onGetContinentCountriesWithBreweriesCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.BeginGetCountriesWithBreweries(System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetCountriesWithBreweries(callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCountry> CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.EndGetCountriesWithBreweries(System.IAsyncResult result)
        {
            return base.Channel.EndGetCountriesWithBreweries(result);
        }

        private System.IAsyncResult OnBeginGetCountriesWithBreweries(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            return ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).BeginGetCountriesWithBreweries(callback, asyncState);
        }

        private object[] OnEndGetCountriesWithBreweries(System.IAsyncResult result)
        {
            System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCountry> retVal = ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).EndGetCountriesWithBreweries(result);
            return new object[] {
                    retVal};
        }

        private void OnGetCountriesWithBreweriesCompleted(object state)
        {
            if ((this.GetCountriesWithBreweriesCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCountriesWithBreweriesCompleted(this, new GetCountriesWithBreweriesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetCountriesWithBreweriesAsync()
        {
            this.GetCountriesWithBreweriesAsync(null);
        }

        public void GetCountriesWithBreweriesAsync(object userState)
        {
            if ((this.onBeginGetCountriesWithBreweriesDelegate == null))
            {
                this.onBeginGetCountriesWithBreweriesDelegate = new BeginOperationDelegate(this.OnBeginGetCountriesWithBreweries);
            }
            if ((this.onEndGetCountriesWithBreweriesDelegate == null))
            {
                this.onEndGetCountriesWithBreweriesDelegate = new EndOperationDelegate(this.OnEndGetCountriesWithBreweries);
            }
            if ((this.onGetCountriesWithBreweriesCompletedDelegate == null))
            {
                this.onGetCountriesWithBreweriesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCountriesWithBreweriesCompleted);
            }
            base.InvokeAsync(this.onBeginGetCountriesWithBreweriesDelegate, null, this.onEndGetCountriesWithBreweriesDelegate, this.onGetCountriesWithBreweriesCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.BeginGetCapTypes(System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetCapTypes(callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCapType> CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService.EndGetCapTypes(System.IAsyncResult result)
        {
            return base.Channel.EndGetCapTypes(result);
        }

        private System.IAsyncResult OnBeginGetCapTypes(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            return ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).BeginGetCapTypes(callback, asyncState);
        }

        private object[] OnEndGetCapTypes(System.IAsyncResult result)
        {
            System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCapType> retVal = ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService)(this)).EndGetCapTypes(result);
            return new object[] {
                    retVal};
        }

        private void OnGetCapTypesCompleted(object state)
        {
            if ((this.GetCapTypesCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCapTypesCompleted(this, new GetCapTypesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetCapTypesAsync()
        {
            this.GetCapTypesAsync(null);
        }

        public void GetCapTypesAsync(object userState)
        {
            if ((this.onBeginGetCapTypesDelegate == null))
            {
                this.onBeginGetCapTypesDelegate = new BeginOperationDelegate(this.OnBeginGetCapTypes);
            }
            if ((this.onEndGetCapTypesDelegate == null))
            {
                this.onEndGetCapTypesDelegate = new EndOperationDelegate(this.OnEndGetCapTypes);
            }
            if ((this.onGetCapTypesCompletedDelegate == null))
            {
                this.onGetCapTypesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCapTypesCompleted);
            }
            base.InvokeAsync(this.onBeginGetCapTypesDelegate, null, this.onEndGetCapTypesDelegate, this.onGetCapTypesCompletedDelegate, userState);
        }

        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }

        private object[] OnEndOpen(System.IAsyncResult result)
        {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }

        private void OnOpenCompleted(object state)
        {
            if ((this.OpenCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }

        public void OpenAsync()
        {
            this.OpenAsync(null);
        }

        public void OpenAsync(object userState)
        {
            if ((this.onBeginOpenDelegate == null))
            {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null))
            {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null))
            {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }

        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }

        private object[] OnEndClose(System.IAsyncResult result)
        {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }

        private void OnCloseCompleted(object state)
        {
            if ((this.CloseCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }

        public void CloseAsync()
        {
            this.CloseAsync(null);
        }

        public void CloseAsync(object userState)
        {
            if ((this.onBeginCloseDelegate == null))
            {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null))
            {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null))
            {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }

        protected override CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService CreateChannel()
        {
            return new BeerServiceClientChannel(this);
        }

        private class BeerServiceClientChannel : ChannelBase<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService>, CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService
        {

            public BeerServiceClientChannel(System.ServiceModel.ClientBase<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.IBeerService> client) :
                base(client)
            {
            }

            public System.IAsyncResult BeginProcessImageFiles(System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoImageFileOperation> imageFiles, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = imageFiles;
                System.IAsyncResult _result = base.BeginInvoke("ProcessImageFiles", _args, callback, asyncState);
                return _result;
            }

            public void EndProcessImageFiles(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                base.EndInvoke("ProcessImageFiles", _args, result);
            }

            public System.IAsyncResult BeginDeleteAllFilesFromContainer(string imageContainer, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = imageContainer;
                System.IAsyncResult _result = base.BeginInvoke("DeleteAllFilesFromContainer", _args, callback, asyncState);
                return _result;
            }

            public void EndDeleteAllFilesFromContainer(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                base.EndInvoke("DeleteAllFilesFromContainer", _args, result);
            }

            public System.IAsyncResult BeginDownloadImageFile(string container, string fileName, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[2];
                _args[0] = container;
                _args[1] = fileName;
                System.IAsyncResult _result = base.BeginInvoke("DownloadImageFile", _args, callback, asyncState);
                return _result;
            }

            public byte[] EndDownloadImageFile(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("DownloadImageFile", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginGetBreweriesByCity(int cityId, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = cityId;
                System.IAsyncResult _result = base.BeginInvoke("GetBreweriesByCity", _args, callback, asyncState);
                return _result;
            }

            public System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery> EndGetBreweriesByCity(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery> _result = ((System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery>)(base.EndInvoke("GetBreweriesByCity", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginGetBreweriesByFilter(int continentId, int countryId, int regionId, int cityId, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[4];
                _args[0] = continentId;
                _args[1] = countryId;
                _args[2] = regionId;
                _args[3] = cityId;
                System.IAsyncResult _result = base.BeginInvoke("GetBreweriesByFilter", _args, callback, asyncState);
                return _result;
            }

            public System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery> EndGetBreweriesByFilter(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery> _result = ((System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery>)(base.EndInvoke("GetBreweriesByFilter", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginGetBreweries(System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetBreweries", _args, callback, asyncState);
                return _result;
            }

            public System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery> EndGetBreweries(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery> _result = ((System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery>)(base.EndInvoke("GetBreweries", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginGetBrewery(int breweryId, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = breweryId;
                System.IAsyncResult _result = base.BeginInvoke("GetBrewery", _args, callback, asyncState);
                return _result;
            }

            public CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery EndGetBrewery(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery _result = ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery)(base.EndInvoke("GetBrewery", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginUpdateBrewery(CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery brewery, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = brewery;
                System.IAsyncResult _result = base.BeginInvoke("UpdateBrewery", _args, callback, asyncState);
                return _result;
            }

            public void EndUpdateBrewery(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                base.EndInvoke("UpdateBrewery", _args, result);
            }

            public System.IAsyncResult BeginDeleteBrewery(CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery brewery, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = brewery;
                System.IAsyncResult _result = base.BeginInvoke("DeleteBrewery", _args, callback, asyncState);
                return _result;
            }

            public void EndDeleteBrewery(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                base.EndInvoke("DeleteBrewery", _args, result);
            }

            public System.IAsyncResult BeginGetBeerCountries(System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetBeerCountries", _args, callback, asyncState);
                return _result;
            }

            public System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeerCountry> EndGetBeerCountries(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeerCountry> _result = ((System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeerCountry>)(base.EndInvoke("GetBeerCountries", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginGetAllBeers(System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAllBeers", _args, callback, asyncState);
                return _result;
            }

            public System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeer> EndGetAllBeers(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeer> _result = ((System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeer>)(base.EndInvoke("GetAllBeers", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginGetCountryBeers(int countryId, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = countryId;
                System.IAsyncResult _result = base.BeginInvoke("GetCountryBeers", _args, callback, asyncState);
                return _result;
            }

            public System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeer> EndGetCountryBeers(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeer> _result = ((System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeer>)(base.EndInvoke("GetCountryBeers", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginGetBeerByName(string beerName, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = beerName;
                System.IAsyncResult _result = base.BeginInvoke("GetBeerByName", _args, callback, asyncState);
                return _result;
            }

            public System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeer> EndGetBeerByName(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeer> _result = ((System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeer>)(base.EndInvoke("GetBeerByName", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginGetBeer(int beerId, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = beerId;
                System.IAsyncResult _result = base.BeginInvoke("GetBeer", _args, callback, asyncState);
                return _result;
            }

            public CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeer EndGetBeer(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeer _result = ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeer)(base.EndInvoke("GetBeer", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginUpdateBeer(CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeer beer, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = beer;
                System.IAsyncResult _result = base.BeginInvoke("UpdateBeer", _args, callback, asyncState);
                return _result;
            }

            public int EndUpdateBeer(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("UpdateBeer", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginDeleteBeer(CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeer beer, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = beer;
                System.IAsyncResult _result = base.BeginInvoke("DeleteBeer", _args, callback, asyncState);
                return _result;
            }

            public void EndDeleteBeer(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                base.EndInvoke("DeleteBeer", _args, result);
            }

            public System.IAsyncResult BeginGetContinents(System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetContinents", _args, callback, asyncState);
                return _result;
            }

            public System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoContinent> EndGetContinents(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoContinent> _result = ((System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoContinent>)(base.EndInvoke("GetContinents", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginGetAllCountries(System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAllCountries", _args, callback, asyncState);
                return _result;
            }

            public System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCountry> EndGetAllCountries(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCountry> _result = ((System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCountry>)(base.EndInvoke("GetAllCountries", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginGetCountriesByContinent(int continentId, bool includeFlags, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[2];
                _args[0] = continentId;
                _args[1] = includeFlags;
                System.IAsyncResult _result = base.BeginInvoke("GetCountriesByContinent", _args, callback, asyncState);
                return _result;
            }

            public System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCountry> EndGetCountriesByContinent(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCountry> _result = ((System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCountry>)(base.EndInvoke("GetCountriesByContinent", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginGetRegionsByCountry(int countryId, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = countryId;
                System.IAsyncResult _result = base.BeginInvoke("GetRegionsByCountry", _args, callback, asyncState);
                return _result;
            }

            public System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoRegion> EndGetRegionsByCountry(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoRegion> _result = ((System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoRegion>)(base.EndInvoke("GetRegionsByCountry", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginGetCitiesByRegion(int regionId, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = regionId;
                System.IAsyncResult _result = base.BeginInvoke("GetCitiesByRegion", _args, callback, asyncState);
                return _result;
            }

            public System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCity> EndGetCitiesByRegion(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCity> _result = ((System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCity>)(base.EndInvoke("GetCitiesByRegion", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginGetBreweriesByCountry(int countryId, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = countryId;
                System.IAsyncResult _result = base.BeginInvoke("GetBreweriesByCountry", _args, callback, asyncState);
                return _result;
            }

            public System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery> EndGetBreweriesByCountry(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery> _result = ((System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBrewery>)(base.EndInvoke("GetBreweriesByCountry", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginGetBeerStyles(System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetBeerStyles", _args, callback, asyncState);
                return _result;
            }

            public System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeerStyle> EndGetBeerStyles(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeerStyle> _result = ((System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeerStyle>)(base.EndInvoke("GetBeerStyles", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginGetBeerStyle(int beerStyleId, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = beerStyleId;
                System.IAsyncResult _result = base.BeginInvoke("GetBeerStyle", _args, callback, asyncState);
                return _result;
            }

            public CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeerStyle EndGetBeerStyle(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeerStyle _result = ((CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeerStyle)(base.EndInvoke("GetBeerStyle", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginUpdateBeerStyle(CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeerStyle beerStyle, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = beerStyle;
                System.IAsyncResult _result = base.BeginInvoke("UpdateBeerStyle", _args, callback, asyncState);
                return _result;
            }

            public void EndUpdateBeerStyle(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                base.EndInvoke("UpdateBeerStyle", _args, result);
            }

            public System.IAsyncResult BeginDeleteBeerStyle(CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoBeerStyle beerStyle, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = beerStyle;
                System.IAsyncResult _result = base.BeginInvoke("DeleteBeerStyle", _args, callback, asyncState);
                return _result;
            }

            public void EndDeleteBeerStyle(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                base.EndInvoke("DeleteBeerStyle", _args, result);
            }

            public System.IAsyncResult BeginGetContinentsWithBreweries(System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetContinentsWithBreweries", _args, callback, asyncState);
                return _result;
            }

            public System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoContinent> EndGetContinentsWithBreweries(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoContinent> _result = ((System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoContinent>)(base.EndInvoke("GetContinentsWithBreweries", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginGetContinentCountriesWithBreweries(int continentId, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = continentId;
                System.IAsyncResult _result = base.BeginInvoke("GetContinentCountriesWithBreweries", _args, callback, asyncState);
                return _result;
            }

            public System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCountry> EndGetContinentCountriesWithBreweries(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCountry> _result = ((System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCountry>)(base.EndInvoke("GetContinentCountriesWithBreweries", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginGetCountriesWithBreweries(System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetCountriesWithBreweries", _args, callback, asyncState);
                return _result;
            }

            public System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCountry> EndGetCountriesWithBreweries(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCountry> _result = ((System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCountry>)(base.EndInvoke("GetCountriesWithBreweries", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginGetCapTypes(System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetCapTypes", _args, callback, asyncState);
                return _result;
            }

            public System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCapType> EndGetCapTypes(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCapType> _result = ((System.Collections.ObjectModel.ObservableCollection<CapsCollection.Silverlight.ServiceAgents.Proxies.Beer.DtoCapType>)(base.EndInvoke("GetCapTypes", _args, result)));
                return _result;
            }
        }
    }
}
